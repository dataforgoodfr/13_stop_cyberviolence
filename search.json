[
  {
    "objectID": "src/doc.html",
    "href": "src/doc.html",
    "title": "StopCyberviolence documentation",
    "section": "",
    "text": "TBD",
    "crumbs": [
      "Documentation"
    ]
  },
  {
    "objectID": "src/doc.html#sec-envprep",
    "href": "src/doc.html#sec-envprep",
    "title": "StopCyberviolence documentation",
    "section": "Environment preparation",
    "text": "Environment preparation\nThe project uses a combination of mamba (conda) (non-python dependencies) and uv (python dependecies) for environment management.\nBackend environment\nmamba create -n stopcyber_backend -c conda-forge uv \nuv pip install -r ./chatbot/chatbot_reqs.txt\nFrontend environment\nmamba create -n stopcyber_frontend -c conda-forge nodejs pnpm",
    "crumbs": [
      "Documentation"
    ]
  },
  {
    "objectID": "src/doc.html#sec-locbackdev",
    "href": "src/doc.html#sec-locbackdev",
    "title": "StopCyberviolence documentation",
    "section": "Backend development",
    "text": "Backend development\nFor environment creation see Section 2.1.\nclone app repo\ngit clone https://github.com/dataforgoodfr/13_stop_cyberviolence\n\nAI Agent\nDatalayer",
    "crumbs": [
      "Documentation"
    ]
  },
  {
    "objectID": "src/doc.html#frontend-development",
    "href": "src/doc.html#frontend-development",
    "title": "StopCyberviolence documentation",
    "section": "Frontend development",
    "text": "Frontend development\n\nChainlit React Layer\n\nPreparation\nIf the frontend environment is ready, proceed as detailed below, else see Section 2.1.\nclone chainlit fork\ngit clone --single-branch --branch dev_monster https://github.com/kantundpeterpan/chainlit.git\nIn order to launch a REACT development server and connecting the chatbot app, the backend environment needs to be created and the chatbot app repo needs to be cloned see Section 2.1 and Section 2.2.\n\n\nFrontend development setup\n\nLaunch React dev server\n\n# from the chainlit repo\ncd frontend/\nnpm run dev\n\n### Output:\nVITE v5.4.14  ready in 1481 ms\n\n  ➜  Local:   http://localhost:5173/\n  ➜  Network: use --host to expose\n  ➜  press h + enter to show help\n###\n\nLaunch chainlit app\n\n# from app repo ./chatbot\nSERVICE1_PROVIDER=gemini chainlit run -h chainlit_app.py\nMake sure all necessary env vars are set correctly (see below).\n\n(Optional if remote) Forward ports\n\nssh ip_to_remote -NL 5173:localhost:5173\nssh ip_to_remote -NL 8000:localhost:8000\n\nDevelop\n\n\n\n\nChainlit Python layer\n\nconfig.toml\npublic",
    "crumbs": [
      "Documentation"
    ]
  },
  {
    "objectID": "src/doc.html#docker-files",
    "href": "src/doc.html#docker-files",
    "title": "StopCyberviolence documentation",
    "section": "Docker files",
    "text": "Docker files\n\n./python_uv_node.Dockerfile\nCustomisation of the UI required forking chainlit, this container contains the base environment for building directly from the fork repo ((p)npm)\n./chainlit_dev.Dockerfile\nBased on the python_uv_node image, for an environment container based on ../chatbot_reqs.txt, requirements possibly a bit bloated\n./chatbot_deploy.Dockerfile\nApp container image, based on the environment image",
    "crumbs": [
      "Documentation"
    ]
  },
  {
    "objectID": "src/doc.html#local-deployment",
    "href": "src/doc.html#local-deployment",
    "title": "StopCyberviolence documentation",
    "section": "Local deployment",
    "text": "Local deployment\n\nfrom within the cloned repo, the app can be started using ../docker_call, if the necessary environment variables are set correctly.",
    "crumbs": [
      "Documentation"
    ]
  },
  {
    "objectID": "src/doc.html#cicd",
    "href": "src/doc.html#cicd",
    "title": "StopCyberviolence documentation",
    "section": "CI/CD",
    "text": "CI/CD\n\nFrontend changes pushed to production\nThe frontend repo is configured to trigger a rebuild and push to dockerhub of the custom chainlit environment container.\nImportant files, repos\n\ngithub workflow emitting a repository_dispatch on chainlit fork:\n\nproduction branch monstermessenger\n\ngithub workflow processing the repository_dispatch on chatbot repo:\n\nbuild and push the environment container\ntrigger Google Cloud Build/Run to rebuild with the new env-container\n\n\n\n\nBackend / Chainlit python layer changes pushed to production\nChanges pushed to main of the chatbot repo trigger Google Cloud Build/Run (see below)\n\n\nGoogle Cloud Build / Run\n\nGoogle Cloud Build is configured in the github applications of the repo and builds ..//chatbot_deploy.Dockerfile on each push to main\nCurrently a single version is running, using the generativelanguage API of Google Cloud\nModel: gemini-flash-2.0\nThe following secrets are set as environment variables in the Google Cloud Run configuration:\n\nLANGFUSE_{AZURE/GEMINI}_SECRET_KEY\nLANGFUSE_{AZURE/GEMINI}_PUBLIC_KEY\nSERVICE1_PROVIDER (azure or gemini)\nOPENAI_API_KEY\nOPENROUTER_API_KEY\nGOOGLE_API_KEY\nGOOGLE_PROJECT_ID\nGOOGLE_PRIVATE_KEY\nGOOGLE_CLIENT_EMAIL\nGOOGLE_BUCKET_NAME\n\n\nhttps://www.perplexity.ai/search/how-to-deploy-a-chainlit-app-o-1_qhFwFxTsO0VFOksS67.Q\nhttps://www.perplexity.ai/search/make-a-minimal-viable-example-zL9hudIbRZCFEjMqaJhiww\n\n\nRepo and database ownership\n\ndataforgoodfr/13_stop_cyberviolence\nkantundpeterpan/chainlit\nchainlit datalayer Postgres DB: kantundpeterpan, currently on neon\n\n\n\nAzure Pipelines / Container Apps, Services\nexact Azure Service to be used TBD\nhttps://www.perplexity.ai/search/what-would-be-de-equivalent-of-IBve3EyyTs.n5K_BY65.xw\n\nAzure Pipelines is granted access to the repo\ncannot build at the moment due to quota issues",
    "crumbs": [
      "Documentation"
    ]
  }
]